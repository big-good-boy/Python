Методы и функции Python:
.title()      Первая буква каждого слова - прописная, остальные - строчные
.upper()      Вся строка прописная
.lower()      Вся строка строчная
.rstrip()     Удаление пропусков в конце строки
.lstrip()     Удаление пропусков в начале строки
.strip()      Удаление пропусков в начале и в конце строки

**            возведение в степень

str()         Преобразование не-строкового значения к строковому виду

.append()     Добавление элемента в конец списка
.insert()     Добавление элемента в произвольную позицию списка. Принимает два аргумента: номер позиции, элемент

del             Команда для удаления элемента
.pop()          Удаление указанного элемента списка с возвратом значения. При осутствии передаваемого аргумента, удаляет последний элемент
.remove()       Удаление элемента списка с указанным значением
.sort()         Постоянная сортировка списка. При отсутствии передаваемых аргументов, сортировка происходит в алфавитном порядке, при передачи аргумента reverse=True, сортировка происходит в обратном алфавитном порядке
sorted()        Временная сортировка списка. Принимает два аргумента: список, метод сортировки. При отсутствии второго аргумента, сортировка происходит в алфавитном порядке
.reverse()      Постоянное переставление элементов списка в обратном порядке
len()           Опраделение длины списка

range()         Построение числовой последовательности. Принимаемые аргументы: обязательные - начало и конец последовательности, не обязателный - кратность увеличения
list()          Преобразование в список

min()           Возвращает минимальное значение
max()           Возвращает максимальное значение
sum()           Возвращает сумму значений

Цикл:
for in :

Условие:
if:
elif:
else:

['Список']
('Неизменяемый список (кортеж)')
{'Словарь'}

.items()        Возвращает список пары ключ-значение
.keys()         Возвращает список ключей
.values()       Возвращает список значений

set()           Множество (возвращает уникальные элементы)
range()

input()         Поле для ввода данных (Python 2.7: raw_input())

int()           Преобразование к числу

Импортирование:
Импортирование всего модуля:        import pizza
Использование:                      pizza.make_pizza(16, 'pepperoni')
Импортирование конкретных функций:  from pizza import make_pizza
Использование:                      make_pizza(16, 'pepperoni')
Назначение псевдонима для функции:  from pizza import make_pizza as mp
Использование:                      mp(16, 'pepperoni')
Назначение псевдонима для модуля:   import pizza as p
Использование:                      p.make_pizza(16, 'pepperoni')
Импортирование всех функций модуля: from pizza import *
Использование:                      make_pizza(16, 'pepperoni')
(не рекомендуется из-за возможных конфликтов имён)

class ClassName():                  Создание класса
class ClassName(object):            Создание класса (Python 2.7)

__init__()                          Метод, выполняемый автоматически при
                                    созданиии каждого нового экземпляра

super()                             Функция для связки потомка с родителем

Класс-родитель - суперкласс, класс-потомок - субкласс

readlines()     Построчное чтение и сохранение в списке